/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  KYCVerification,
  KYCVerificationInterface,
} from "../KYCVerification";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserVerified",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "checkKYC",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
    ],
    name: "verifyUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610702806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631b4e7bd21461005c5780637e7ed0321461008c5780638846594b146100a85780638f283970146100d8578063f851a440146100f4575b600080fd5b610076600480360381019061007191906104c4565b610112565b604051610083919061050c565b60405180910390f35b6100a660048036038101906100a19190610553565b610132565b005b6100c260048036038101906100bd91906104c4565b6102df565b6040516100cf919061050c565b60405180910390f35b6100f260048036038101906100ed91906104c4565b610335565b005b6100fc61043d565b60405161010991906105a2565b60405180910390f35b60016020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b790610640565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561024d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610244906106ac565b60405180910390fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fa6625d2d26e786e2f473111bea4b2fcdbbf1863d883a2359989ce3a103d2972a826040516102d391906105a2565b60405180910390a15050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ba90610640565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c8160405161043291906105a2565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061049182610466565b9050919050565b6104a181610486565b81146104ac57600080fd5b50565b6000813590506104be81610498565b92915050565b6000602082840312156104da576104d9610461565b5b60006104e8848285016104af565b91505092915050565b60008115159050919050565b610506816104f1565b82525050565b600060208201905061052160008301846104fd565b92915050565b610530816104f1565b811461053b57600080fd5b50565b60008135905061054d81610527565b92915050565b6000806040838503121561056a57610569610461565b5b6000610578858286016104af565b92505060206105898582860161053e565b9150509250929050565b61059c81610486565b82525050565b60006020820190506105b76000830184610593565b92915050565b600082825260208201905092915050565b7f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b600061062a6021836105bd565b9150610635826105ce565b604082019050919050565b600060208201905081810360008301526106598161061d565b9050919050565b7f5573657220697320616c72656164792076657269666965640000000000000000600082015250565b60006106966018836105bd565b91506106a182610660565b602082019050919050565b600060208201905081810360008301526106c581610689565b905091905056fea2646970667358221220ef6d88c288ffa6fccb1be5422cda8665a4e19ee52eb0c84d37146c74e8f3aaa464736f6c63430008130033";

type KYCVerificationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KYCVerificationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KYCVerification__factory extends ContractFactory {
  constructor(...args: KYCVerificationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KYCVerification & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KYCVerification__factory {
    return super.connect(runner) as KYCVerification__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KYCVerificationInterface {
    return new Interface(_abi) as KYCVerificationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): KYCVerification {
    return new Contract(address, _abi, runner) as unknown as KYCVerification;
  }
}
